{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","preparedGoods","map","name","id","uuidv4","App","useState","isStarted","setStarted","isReversed","setReversed","NONE","sortType","setSortType","visibleGoods","useMemo","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAsBKA,E,4DALCC,EAb4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGoCC,KAAI,SAAAC,GAAI,MAAK,CACjDA,OACAC,GAAIC,mB,SAGDL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAMM,EAAU,WACrB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASP,EAASY,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAgCMC,EAAeC,mBArBK,WACxB,IAAMD,EAAY,YAAOd,GAezB,OAbIY,IAAab,EAASY,MACxBG,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAQN,GACN,KAAKb,EAASoB,SACZ,OAAOF,EAAEf,KAAKkB,cAAcF,EAAEhB,MAChC,KAAKH,EAASsB,OACZ,OAAOJ,EAAEf,KAAKoB,OAASJ,EAAEhB,KAAKoB,OAChC,QACE,OAAO,MAKRb,EACHK,EAAaS,UACbT,IAG0C,CAACL,EAAYG,IAE7D,OACE,sBAAKY,UAAU,qCAAf,WACIjB,GACA,wBACEkB,KAAK,SACLD,UAAU,+BACVE,QAtCM,kBAAMlB,GAAW,IAmCzB,mBASDD,GACC,sBAAKiB,UAAU,sCAAf,UACE,gCACE,wBACEC,KAAK,SACLD,UAAU,wBACVE,QAjDO,kBAAMb,EAAYd,EAASoB,WA8CpC,iCAQA,wBACEM,KAAK,SACLD,UAAU,wBACVE,QAxDS,kBAAMb,EAAYd,EAASsB,SAqDtC,4BAQA,wBACEI,KAAK,SACLD,UAAU,wBACVE,QA/DI,kBAAMhB,GAAaD,IA4DzB,qBAQA,wBACEgB,KAAK,SACLD,UAAU,wBACVE,QAtEE,WACZb,EAAYd,EAASY,MACrBD,GAAY,IAiEJ,sBASF,oBAAIc,UAAU,QAAd,SACGV,EAAab,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OAChB,oBAAIqB,UAAU,cAAd,SAAsCtB,GAALC,eChH/CwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.01607504.chunk.js","sourcesContent":["import { FC, useMemo, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedGoods = goodsFromServer.map(name => ({\n  name,\n  id: uuidv4(),\n}));\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const App: FC = () => {\n  const [isStarted, setStarted] = useState(false);\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const start = () => setStarted(true);\n  const sortByName = () => setSortType(SortType.ALPHABET);\n  const sortByLength = () => setSortType(SortType.LENGTH);\n  const reverse = () => setReversed(!isReversed);\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setReversed(false);\n  };\n\n  const getReorderedGoods = () => {\n    const visibleGoods = [...preparedGoods];\n\n    if (sortType !== SortType.NONE) {\n      visibleGoods.sort((a, b) => {\n        switch (sortType) {\n          case SortType.ALPHABET:\n            return a.name.localeCompare(b.name);\n          case SortType.LENGTH:\n            return a.name.length - b.name.length;\n          default:\n            return 0;\n        }\n      });\n    }\n\n    return isReversed\n      ? visibleGoods.reverse()\n      : visibleGoods;\n  };\n\n  const visibleGoods = useMemo(getReorderedGoods, [isReversed, sortType]);\n\n  return (\n    <div className=\"App level is-flex-direction-column\">\n      {!isStarted && (\n        <button\n          type=\"button\"\n          className=\"button is-success level-item\"\n          onClick={start}\n        >\n          Start\n        </button>\n      )}\n\n      {isStarted && (\n        <div className=\"level-item is-flex-direction-column\">\n          <div>\n            <button\n              type=\"button\"\n              className=\"button is-primary m-2\"\n              onClick={sortByName}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-primary m-2\"\n              onClick={sortByLength}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-primary m-2\"\n              onClick={reverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-primary m-2\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          </div>\n\n          <ul className=\"Goods\">\n            {visibleGoods.map(({ name, id }) => (\n              <li className=\"Goods__item\" key={id}>{name}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}